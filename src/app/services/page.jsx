"use client"; // Directiva para indicar que este componente es un componente de cliente en Next.js

import React from "react"; // Importa la librer√≠a React
import { motion } from "framer-motion"; // Importa el componente 'motion' de Framer Motion para animaciones
import Link from "next/link"; // Importa el componente 'Link' de Next.js para la navegaci√≥n entre p√°ginas
import {
  FaClock, // Icono de reloj
  FaShieldAlt, // Icono de escudo
  FaHeart, // Icono de coraz√≥n
  FaTooth, // Icono de diente (usado como icono principal de odontolog√≠a)
  FaMagic, // Icono de magia
  FaUserMd, // Icono de m√©dico (no usado en este c√≥digo, pero importado)
  FaCalendarPlus, // Icono de calendario con un signo de m√°s (para agendar cita)
  FaMapMarkerAlt, // Icono de marcador de mapa (para ubicaci√≥n)
  FaPhone, // Icono de tel√©fono
  FaClock as FaClockAlt, // Se importa FaClock de nuevo pero con un alias FaClockAlt para evitar conflicto de nombres si se necesitara usar el original FaClock tambi√©n.
} from "react-icons/fa"; // Importa varios iconos de la librer√≠a Font Awesome a trav√©s de react-icons
import Card, { ActionCard, StatCard } from "../../components/ui/Card"; // Importa componentes de tarjeta (Card, ActionCard, StatCard) desde una ruta relativa
import DentalButton from "../../components/ui/Button"; // Importa un componente de bot√≥n personalizado (DentalButton) desde una ruta relativa
import PageHero from "@/components/ui/PageHero"; // Hero reutilizable alineado con Home

// --- Animation Variants (Variantes de Animaci√≥n) ---
// Define variantes de animaci√≥n para el contenedor principal
const containerVariants = {
  hidden: { opacity: 0 }, // Estado inicial: oculto (opacidad 0)
  visible: {
    opacity: 1, // Estado final: visible (opacidad 1)
    transition: {
      staggerChildren: 0.1, // Retraso entre la animaci√≥n de los elementos hijos
      delayChildren: 0.2, // Retraso antes de que los hijos comiencen a animarse
      duration: 0.6, // Duraci√≥n total de la animaci√≥n del contenedor
    },
  },
};

// Define variantes de animaci√≥n para elementos individuales
const itemVariants = {
  hidden: { y: 30, opacity: 0 }, // Estado inicial: oculto (desplazado 30px hacia abajo y opacidad 0)
  visible: {
    y: 0, // Estado final: en su posici√≥n original
    opacity: 1, // Estado final: visible (opacidad 1)
    transition: {
      type: "spring", // Tipo de animaci√≥n: muelle (spring) para un movimiento m√°s natural
      stiffness: 100, // Rigidez del muelle
      damping: 15, // Amortiguaci√≥n del muelle
    },
  },
};

// Define variantes de animaci√≥n para un efecto de "escalar al pasar el rat√≥n" (hover)
const scaleOnHover = {
  hover: {
    scale: 1.05, // Escala el elemento al 105% de su tama√±o original
    y: -8, // Desplaza el elemento 8px hacia arriba
    transition: {
      type: "spring", // Animaci√≥n de muelle para una transici√≥n suave
      stiffness: 300, // Rigidez del muelle
      damping: 20, // Amortiguaci√≥n del muelle
    },
  },
};

// Define variantes de animaci√≥n para un efecto de "flotaci√≥n"
const floatingVariants = {
  animate: {
    y: [-10, 10, -10], // Anima la posici√≥n Y entre -10px, 10px y -10px para crear un efecto de flotaci√≥n
    transition: {
      duration: 6, // Duraci√≥n de un ciclo completo de la animaci√≥n
      repeat: Infinity, // Repite la animaci√≥n indefinidamente
      ease: "easeInOut", // Funci√≥n de easing para una animaci√≥n suave de entrada y salida
    },
  },
};

// --- Data (Datos) ---
// Objeto que contiene los datos para las diferentes categor√≠as de servicios dentales
const servicesData = {
  general: {
    title: "Odontolog√≠a General y Preventiva", // T√≠tulo de la categor√≠a
    color: "primary", // Color asociado a la categor√≠a (probablemente usado para estilos)
    icon: "ü¶∑", // Icono emoji para la categor√≠a
    services: [
      // Array de servicios individuales dentro de esta categor√≠a
      {
        name: "Limpieza Dental Profesional",
        description:
          "Eliminaci√≥n de placa y sarro para mantener una boca saludable",
        duration: "45 min",
        price: "Desde $50.000",
      },
      {
        name: "Chequeo y Diagn√≥stico",
        description:
          "Evaluaci√≥n completa de la salud bucal con tecnolog√≠a avanzada",
        duration: "30 min",
        price: "Desde $30.000",
      },
      {
        name: "Tratamiento de Caries",
        description:
          "Restauraci√≥n de dientes afectados con materiales de alta calidad",
        duration: "60 min",
        price: "Desde $80.000",
      },
      {
        name: "Extracciones Simples",
        description: "Extracci√≥n segura de dientes da√±ados o problem√°ticos",
        duration: "45 min",
        price: "Desde $100.000",
      },
    ],
  },
  estetica: {
    title: "Est√©tica Dental y Blanqueamiento",
    color: "secondary",
    icon: "‚ú®",
    services: [
      {
        name: "Blanqueamiento Dental",
        description:
          "Sonrisa m√°s brillante y blanca con tecnolog√≠a profesional",
        duration: "90 min",
        price: "Desde $150.000",
      },
      {
        name: "Carillas de Porcelana",
        description:
          "Transformaci√≥n completa de la sonrisa con carillas personalizadas",
        duration: "2 sesiones",
        price: "Desde $800.000",
      },
      {
        name: "Dise√±o de Sonrisa",
        description: "Planificaci√≥n integral para la sonrisa de tus sue√±os",
        duration: "Consulta",
        price: "Desde $200.000",
      },
      {
        name: "Bonding Dental",
        description: "Correcci√≥n de imperfecciones menores de forma r√°pida",
        duration: "60 min",
        price: "Desde $120.000",
      },
    ],
  },
  ortodoncia: {
    title: "Ortodoncia y Rehabilitaci√≥n",
    color: "accent",
    icon: "ü™•",
    services: [
      {
        name: "Brackets Met√°licos",
        description:
          "Ortodoncia tradicional para alinear perfectamente tus dientes",
        duration: "18-24 meses",
        price: "Desde $2.500.000",
      },
      {
        name: "Brackets Est√©ticos",
        description: "Ortodoncia discreta con brackets transparentes",
        duration: "18-24 meses",
        price: "Desde $3.200.000",
      },
      {
        name: "Invisalign",
        description: "Alineadores transparentes removibles para adultos",
        duration: "12-18 meses",
        price: "Desde $4.500.000",
      },
      {
        name: "Retenedores",
        description: "Mantenimiento de resultados despu√©s del tratamiento",
        duration: "Permanente",
        price: "Desde $150.000",
      },
    ],
  },
  especializada: {
    title: "Especialidades Avanzadas",
    color: "primary",
    icon: "üî¨",
    services: [
      {
        name: "Endodoncia",
        description: "Tratamiento de conductos para salvar dientes da√±ados",
        duration: "90 min",
        price: "Desde $300.000",
      },
      {
        name: "Periodoncia",
        description: "Tratamiento de enc√≠as y enfermedades periodontales",
        duration: "60 min",
        price: "Desde $200.000",
      },
      {
        name: "Cirug√≠a Oral",
        description: "Extracciones complejas y cirug√≠as bucales",
        duration: "Var√≠a",
        price: "Desde $400.000",
      },
      {
        name: "Implantes Dentales",
        description: "Reemplazo permanente de dientes perdidos",
        duration: "3-6 meses",
        price: "Desde $2.800.000",
      },
    ],
  },
};

// Array de informaci√≥n de contacto
const contactInfo = [
  {
    icon: FaMapMarkerAlt, // Icono de ubicaci√≥n
    title: "Ubicaci√≥n", // T√≠tulo
    content: ["Calle Principal #123", "Centro, Ciudad"], // Contenido de la ubicaci√≥n
    iconColor: "text-red-500",
  },
  {
    icon: FaPhone, // Icono de tel√©fono
    title: "Tel√©fono", // T√≠tulo
    content: ["+57 123 456 7890", "+57 098 765 4321"], // N√∫meros de tel√©fono
    iconColor: "text-blue-500",
  },
  {
    icon: FaClockAlt, // Icono de reloj (alias para FaClock)
    title: "Horarios", // T√≠tulo
    content: ["Lun - Vie: 8:00 AM - 6:00 PM", "S√°b: 8:00 AM - 2:00 PM"], // Horarios de atenci√≥n
    iconColor: "text--500",
  },
];

// --- Components (Componentes) ---
// Componente gen√©rico para una secci√≥n de la p√°gina
const Section = ({ children, className = "" }) => (
  <section className={`py-16 md:py-20 ${className}`}>
    {" "}
    {/* Contenedor de secci√≥n con padding vertical responsivo y clase CSS opcional */}
    <div className="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      {" "}
      {/* Contenedor interno con ancho m√°ximo, centrado y padding horizontal responsivo */}
      {children} {/* Renderiza los componentes hijos */}
    </div>
  </section>
);

// Componente para el t√≠tulo de una secci√≥n
const SectionTitle = ({ title, subtitle, gradient = false, icon }) => (
  <motion.div variants={itemVariants} className="text-center mb-16">
    {" "}
    {/* Contenedor animado con variantes de item, centrado y margen inferior */}
    {icon && ( // Si se proporciona un icono, lo renderiza
      <motion.div
        className="text-6xl mb-6" // Estilo para el icono
        initial={{ scale: 0 }} // Estado inicial de animaci√≥n: escala 0
        animate={{ scale: 1 }} // Estado final: escala 1
        transition={{ delay: 0.2, type: "spring", stiffness: 200 }} // Transici√≥n de animaci√≥n
      >
        {icon} {/* Renderiza el icono */}
      </motion.div>
    )}
    <motion.h2
      className={`text-3xl md:text-4xl lg:text-5xl font-black mb-4 ${
        // Estilo del t√≠tulo con tama√±o de fuente responsivo y negrita
        gradient
          ? "bg-gradient-to-r from-primary via-accent to-primary bg-clip-text text-transparent" // Si es gradiente, aplica estilos de gradiente de texto
          : "text-primary-500" // Si no es gradiente, aplica color primario
      }`}
      initial={{ scale: 0.9, opacity: 0 }} // Estado inicial de animaci√≥n
      animate={{ scale: 1, opacity: 1 }} // Estado final
      transition={{ duration: 0.6 }} // Duraci√≥n de la transici√≥n
    >
      {title} {/* Renderiza el t√≠tulo */}
    </motion.h2>
    <motion.div
      className="w-24 h-1 bg-accent-500 mx-auto rounded-full mb-6" // L√≠nea decorativa debajo del t√≠tulo
      initial={{ width: 0 }} // Estado inicial de animaci√≥n: ancho 0
      animate={{ width: 96 }} // Estado final: ancho 96px
      transition={{ delay: 0.3, duration: 0.8 }} // Transici√≥n de animaci√≥n
    />
    {subtitle && ( // Si se proporciona un subt√≠tulo, lo renderiza
      <motion.p
        className="text-lg md:text-xl text-text-secondary max-w-4xl mx-auto leading-relaxed" // Estilo del subt√≠tulo
        initial={{ y: 20, opacity: 0 }} // Estado inicial de animaci√≥n
        animate={{ y: 0, opacity: 1 }} // Estado final
        transition={{ delay: 0.4, duration: 0.6 }} // Transici√≥n de animaci√≥n
      >
        {subtitle} {/* Renderiza el subt√≠tulo */}
      </motion.p>
    )}
  </motion.div>
);

// Componente para una tarjeta de servicio individual
const ServiceCard = ({ service, index }) => (
  <motion.div
    variants={itemVariants} // Aplica variantes de animaci√≥n de item
    initial={{ scale: 0.8, opacity: 0 }} // Estado inicial de animaci√≥n
    animate={{ scale: 1, opacity: 1 }} // Estado final
    transition={{ delay: index * 0.1, duration: 0.6 }} // Retraso de animaci√≥n basado en el √≠ndice
    whileHover={scaleOnHover.hover} // Animaci√≥n al pasar el rat√≥n
    className="w-full max-w-md mx-auto" // Estilos de ancho y centrado
  >
    <ActionCard
      className="bg-[var(--color-primary)] dark:bg-[var(--color-surface)] h-full w-full min-h-[200px] border-2 border-border dark:border-border-dark relative overflow-hidden" // Estilos de la tarjeta, incluyendo colores de fondo y bordes para temas claro/oscuro
      title={service.name} // T√≠tulo de la tarjeta (nombre del servicio)
      description={service.description} // Descripci√≥n del servicio
      actions={
        // Contenido de la secci√≥n de acciones de la tarjeta
        <div className="flex justify-between items-center w-full mt-6">
          <span className="text-sm bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-3 py-1 rounded-full font-medium">
            {service.duration} {/* Duraci√≥n del servicio */}
          </span>
          <div className="flex flex-col items-end">
            <span className="text-sm font-bold text-primary mb-2">
              {service.price} {/* Precio del servicio */}
            </span>
            <DentalButton variant="primary" size="sm">
              Agendar {/* Bot√≥n para agendar */}
            </DentalButton>
          </div>
        </div>
      }
    >
      {/* Decoraci√≥n de efecto hover */}
      <motion.div
        className="absolute bottom-0 left-0 h-1 bg-gradient-to-r from-primary to-accent" // L√≠nea de gradiente en la parte inferior
        initial={{ width: "0%" }} // Estado inicial: ancho 0
        whileHover={{ width: "100%" }} // Al pasar el rat√≥n: ancho 100%
        transition={{ duration: 0.3 }} // Duraci√≥n de la transici√≥n
      />
    </ActionCard>
  </motion.div>
);

// Componente para una categor√≠a de servicios
const ServiceCategory = ({ category, categoryData, index }) => (
  <motion.div
    variants={containerVariants} // Aplica variantes de animaci√≥n de contenedor
    initial="hidden" // Estado inicial: oculto
    whileInView="visible" // Anima a "visible" cuando el componente est√° en la vista
    viewport={{ once: true, amount: 0.2 }} // Configuraci√≥n del viewport para la animaci√≥n (solo una vez, 20% visible)
    className="mb-20" // Margen inferior
  >
    <SectionTitle title={categoryData.title} icon={categoryData.icon} />{" "}
    {/* T√≠tulo de la secci√≥n de categor√≠a */}
    <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-2 gap-6 lg:gap-8 justify-items-center max-w-6xl mx-auto">
      {" "}
      {/* Grid responsivo para las tarjetas de servicio */}
      {categoryData.services.map((service, serviceIndex) => (
        <ServiceCard
          key={serviceIndex} // Clave √∫nica para cada tarjeta
          service={service} // Datos del servicio
          index={serviceIndex} // √çndice del servicio para retrasos de animaci√≥n
        />
      ))}
    </div>
  </motion.div>
);

// Componente para una tarjeta de informaci√≥n de contacto
const ContactCard = ({ info, index }) => (
  <motion.div
    variants={itemVariants} // Aplica variantes de animaci√≥n de item
    initial={{ scale: 0.8, opacity: 0 }} // Estado inicial de animaci√≥n
    animate={{ scale: 1, opacity: 1 }} // Estado final
    transition={{ delay: index * 0.1, duration: 0.6 }} // Retraso de animaci√≥n basado en el √≠ndice
    whileHover={scaleOnHover.hover} // Animaci√≥n al pasar el rat√≥n
    className="w-full max-w-sm mx-auto" // Estilos de ancho y centrado
  >
    <Card className="bg-[var(--color-primary)] dark:bg-[var(--color-surface)] text-center h-full min-h-[200px] border-2 border-border dark:border-border-dark relative overflow-hidden">
      {" "}
      {/* Estilos de la tarjeta de contacto */}
      <motion.div
        className={`text-4xl mb-4 ${info.iconColor || "text-primary"}`} // Estilo del icono
        whileHover={{ scale: 1.2, rotate: 10 }} // Animaci√≥n al pasar el rat√≥n
        transition={{ duration: 0.3 }} // Duraci√≥n de la transici√≥n
      >
        <info.icon className="w-12 h-12 text-primary mx-auto" />{" "}
        {/* Renderiza el icono con estilos */}
      </motion.div>
      <h3 className="text-xl font-semibold mb-2 text-text-primary">
        {info.title} {/* T√≠tulo de la informaci√≥n de contacto */}
      </h3>
      <div className="text-text-secondary">
        {info.content.map((line, i) => (
          <p key={i} className="mb-1">
            {line} {/* Contenido de la informaci√≥n de contacto */}
          </p>
        ))}
      </div>
      {/* Decoraci√≥n de fondo flotante */}
      <motion.div
        variants={floatingVariants} // Aplica variantes de animaci√≥n de flotaci√≥n
        animate="animate" // Inicia la animaci√≥n de flotaci√≥n
        className="absolute -top-4 -right-4 w-20 h-20 bg-primary/10 rounded-full blur-xl" // Estilos de la decoraci√≥n
      />
    </Card>
  </motion.div>
);

// Hero reutilizando PageHero para consistencia visual
const HeroSection = () => (
  <PageHero
    headingLines={["Nuestros Servicios Odontol√≥gicos"]}
    subtitle="Cuidamos tu sonrisa con tecnolog√≠a de vanguardia y atenci√≥n personalizada"
    primaryAction={{
      label: "Agendar Cita",
      onClick: () => alert("Redirigiendo al agendamiento..."),
      ariaLabel: "Agendar una cita",
      variant: "primary",
      icon: <FaCalendarPlus className="w-5 h-5" />,
    }}
    secondaryActions={[
      {
        label: "Contactar",
        href: "/contact",
        ariaLabel: "Ir a la p√°gina de contacto",
        variant: "secondary",
      },
    ]}
  >
    <span className="px-4 py-2 rounded-full bg-white/15 text-white text-sm font-medium backdrop-blur-sm flex items-center gap-2">
      <FaClock className="w-4 h-4" /> Horarios Flexibles
    </span>
    <span className="px-4 py-2 rounded-full bg-white/15 text-white text-sm font-medium backdrop-blur-sm flex items-center gap-2">
      <FaShieldAlt className="w-4 h-4" /> Garant√≠a de Calidad
    </span>
    <span className="px-4 py-2 rounded-full bg-white/15 text-white text-sm font-medium backdrop-blur-sm flex items-center gap-2">
      <FaHeart className="w-4 h-4" /> Atenci√≥n Personalizada
    </span>
  </PageHero>
);

// Componente para la secci√≥n de Llamada a la Acci√≥n (CTA)
const CTASection = () => (
  <Section className="bg-gradient-primary dark:bg-gradient-primary-dark text-white w-screen left-1/2 -ml-[50vw] relative">
    {" "}
    {/* Estilos de la secci√≥n CTA */}
    {/* Decoraciones de fondo */}
    <motion.div
      // Eliminada rotaci√≥n para mejorar rendimiento y simplicidad visual
      // animate={{ rotate: [0, 360] }}
      transition={{ duration: 30, repeat: Infinity, ease: "linear" }} // Transici√≥n
      className="absolute -top-20 -right-20 w-40 h-40 border border-white/10 rounded-full" // Estilos de la decoraci√≥n
    />
    <motion.div
      // animate={{ rotate: [360, 0] }}
      transition={{ duration: 25, repeat: Infinity, ease: "linear" }} // Transici√≥n
      className="absolute -bottom-20 -left-20 w-32 h-32 border border-white/10 rounded-full" // Estilos de la decoraci√≥n
    />
    <motion.div
      initial="hidden" // Estado inicial: oculto
      whileInView="visible" // Anima a visible cuando est√° en la vista
      viewport={{ once: true, amount: 0.5 }} // Configuraci√≥n del viewport
      variants={containerVariants} // Aplica variantes de animaci√≥n de contenedor
      className="text-center relative z-10" // Estilos del contenido
    >
      <motion.div
        variants={itemVariants} // Aplica variantes de animaci√≥n de item
        className="inline-flex p-4 mb-8 bg-white/10 rounded-2xl backdrop-blur-sm" // Estilos del contenedor del icono
      >
        <FaMagic className="w-12 h-12 text-white" /> {/* Icono de magia */}
      </motion.div>
      <motion.h2
        variants={itemVariants} // Aplica variantes de animaci√≥n de item
        className="text-3xl md:text-4xl font-bold mb-6" // Estilos del t√≠tulo
      >
        ¬øListo para Transformar tu Sonrisa? {/* T√≠tulo */}
      </motion.h2>
      <motion.p
        variants={itemVariants} // Aplica variantes de animaci√≥n de item
        className="text-xl mb-8 opacity-90 max-w-3xl mx-auto" // Estilos del subt√≠tulo
      >
        Agenda tu cita hoy y recibe una consulta de evaluaci√≥n gratuita{" "}
        {/* Descripci√≥n */}
      </motion.p>
      <motion.div
        variants={itemVariants} // Aplica variantes de animaci√≥n de item
        className="flex flex-col sm:flex-row gap-4 justify-center" // Contenedor de botones
      >
        <DentalButton
          variant="primary" // Variante del bot√≥n
          size="lg" // Tama√±o del bot√≥n
          icon={<FaCalendarPlus />} // Icono del bot√≥n
          className="bg-white text-primary font-bold shadow-dental-xl hover:shadow-dental-2xl border " // Estilos adicionales
        >
          Agendar Cita {/* Texto del bot√≥n */}
        </DentalButton>
        <Link href="/contact">
          {" "}
          {/* Enlace a la p√°gina de contacto */}
          <DentalButton
            variant="secondary" // Variante del bot√≥n
            size="lg" // Tama√±o del bot√≥n
            className="border-2 border-white text-white hover:bg-white hover:text-primary-500 backdrop-blur-sm" // Estilos adicionales
          >
            Contactar {/* Texto del bot√≥n */}
          </DentalButton>
        </Link>
      </motion.div>
    </motion.div>
  </Section>
);

// Componente para la secci√≥n de Contacto
const ContactSection = () => (
  <Section>
    <motion.div
      initial="hidden" // Estado inicial: oculto
      whileInView="visible" // Anima a visible cuando est√° en la vista
      viewport={{ once: true, amount: 0.3 }} // Configuraci√≥n del viewport
      variants={containerVariants} // Aplica variantes de animaci√≥n de contenedor
    >
      <SectionTitle
        title="Informaci√≥n de Contacto" // T√≠tulo de la secci√≥n
        subtitle="Estamos aqu√≠ para ayudarte. Cont√°ctanos por cualquiera de estos medios." // Subt√≠tulo
      />
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 lg:gap-8 justify-items-center max-w-4xl mx-auto">
        {" "}
        {/* Grid responsivo para las tarjetas de contacto */}
        {contactInfo.map((info, index) => (
          <ContactCard key={index} info={info} index={index} /> // Renderiza las tarjetas de contacto
        ))}
      </div>
    </motion.div>
  </Section>
);

// --- Main Services Page Component (Componente Principal de la P√°gina de Servicios) ---
// Este es el componente principal que compone toda la p√°gina de servicios
function ServicesPage() {
  return (
    <div className="min-h-screen dental-bg-background relative pt-6 sm:pt-4">
      {" "}
      {/* Contenedor principal de la p√°gina con altura m√≠nima de pantalla y fondo tem√°tico */}
      {/* Decoraciones de fondo fijas */}
      {/* Fondo decorativo fijo removido (dos c√≠rculos blur animados) para reducir distracci√≥n y repaints */}
      {/* Secci√≥n Hero */}
      <HeroSection />
      {/* Categor√≠as de Servicios */}
      <Section>
        {Object.entries(servicesData).map(([category, categoryData], index) => (
          <ServiceCategory
            key={category} // Clave √∫nica para cada categor√≠a
            category={category} // Nombre de la categor√≠a
            categoryData={categoryData} // Datos de la categor√≠a
            index={index} // √çndice de la categor√≠a para posibles retrasos de animaci√≥n
          />
        ))}
      </Section>
      {/* Secci√≥n CTA */}
      <CTASection />
      {/* Secci√≥n de Contacto */}
      <ContactSection />
    </div>
  );
}

export default ServicesPage; // Exporta el componente principal para que pueda ser usado en otras partes de la aplicaci√≥n
